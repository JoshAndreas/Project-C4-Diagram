@startuml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()
title isBengkelIdDuplicate API\n[NodeJs User API]
Container(Web_Moservice, "Web Moservice", "Website | JavaScript", "moservice.id main services for Customer")
Boundary(api, "isBengkelIdDuplicate API\n[Component]"){
Component(auths_middleware, "auth.verify", "Middleware | NodeJs", "Middleware for authentication\n(NodeJs User API)")
Component(isBengkelIdDuplicate, "UsersWorkshop.isBengkelIdDuplicate", "Function | NodeJs", "Function for check is bengkel ID duplicate\n(NodeJs User API)")
Component(user_controller, "User Workshop Controller", "Controller | NodeJs", "Controller for User Workshop Related function\n(NodeJs User API)")

Component(isBengkelIdDuplicate, "UsersWorkshop.isBengkelIdDuplicate", "Function | NodeJs", "Function for check is bengkel ID duplicate\n(NodeJs User API)")
Component(read, "read", "Function | NodeJs", "Function for read user workshop data\n(NodeJs User API)")
}
ContainerDb(database, "Moservice Storage", "mySQL Database", "All store for save data and content for Moservice.id")
Rel_D(Web_Moservice, auths_middleware, "1. Request read user workshop data")
Rel_D(auths_middleware, isBengkelIdDuplicate, "2. Request check is bengkel ID duplicate")
Rel_D(isBengkelIdDuplicate, user_controller, "4. Request read user workshop data")
Rel_D(user_controller, read, "5. Request read user workshop data")

Rel_D(read, database, "6. Read user workshop data")
Rel_D(isBengkelIdDuplicate, database, "3. Check is bengkel ID duplicate")

@enduml