@startuml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()
title updatePrimaryVehicle API\n[mos-mobil-service]
Container(Web_Moservice, "Web Moservice", "Website | JavaScript", "moservice.id main services for Customer")
Boundary(api, "updatePrimaryVehicle API\n[Component]"){
Component(mainMiddleware, "Main Middleware", "Middleware | TypeScript", "Main Middleware for Moservice.id\n(mos-mobil-service)")
Component(loggerMiddleware, "Logger Middleware", "Middleware | TypeScript", "Logger Middleware for Moservice.id\n(mos-mobil-service)")
Component(getPemKey, "getPemKey", "Function | TypeScript", "Main Function for Get Pemkey\n(mos-mobil-service)")

Component(auth_middleware, "Auth Middleware", "Middleware | TypeScript", "Middleware for Moadmin Authentication\n(mos-mobil-service)")
Component(mobil_controller, "Mobil Controller", "Controller | TypeScript", "Controller for Mobil Related Function\n(mos-mobil-service)")

Component(updatePrimaryVehicle, "updatePrimaryVehicle", "Function | TypeScript", "Function for Update Primary Customer Vehicle data\n(mos-mobil-service)")
}
ContainerDb(database, "Moservice Storage", "mySQL Database", "All store for save data and content for Moservice.id")
Rel_D(Web_Moservice, loggerMiddleware, "1. Request update Primary Customer Vehicle data by Customer ID & Car ID")
Rel_D(loggerMiddleware, mainMiddleware, "2. Request update Primary Customer Vehicle data by Customer ID & Car ID")

Rel_D(mainMiddleware, auth_middleware, "3. Request update Primary Customer Vehicle data by Customer ID & Car ID")
Rel_R(auth_middleware, getPemKey, "4. Get Pem Key")

Rel_D(auth_middleware, mobil_controller, "5. Request update Primary Customer Vehicle data by Customer ID & Car ID")
Rel_D(mobil_controller, updatePrimaryVehicle, "6. Request update Primary Customer Vehicle data by Customer ID & Car ID")
Rel_D(updatePrimaryVehicle, database, "7. Update Customer Vehicle data")

@enduml