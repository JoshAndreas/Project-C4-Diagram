@startuml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()
title createBooking - rejectBooking API\n[NodeJs Booking API]
Container(Web_Moservice, "Web Moservice", "Website | JavaScript", "moservice.id main services for Customer")
Boundary(api, "createBooking - rejectBooking API\n[Component]"){
Component(auth_middleware, "Auth.verify", "Middleware | NodeJs", "Authentication Middleware for verify\n(NodeJs Booking API)")
Component(booking_controller, "Booking Order Controller", "Controller | NodeJs", "Controller for Booking Order Related Function\n(NodeJs Booking API)")
Component(createBooking, "createBooking", "Function | NodeJs", "Function for create booking\n(NodeJs Booking API)")

Component(rejectBooking, "rejectBooking", "Function | NodeJs", "Function for Case if reject booking\n(NodeJs Booking API)")
Component(readByIDWithAdditionalData, "Booking_Order.readByIDWithAdditionalData", "Function | NodeJs", "Function for read by ID with additional data\n(NodeJs Booking API)")
Component(updateBookingCustomerStatus_script, "Booking_Order.updateBookingCustomerStatus_script", "Function | NodeJs", "Function for update booking customer status\n(NodeJs Booking API)")
Component(insertInbox, "Booking_Inbox.insertInbox", "Function | NodeJs", "Function for insert inbox data\n(NodeJs Booking API)")
Component(bookingEmailRejected, "Booking_Email.bookingEmailRejected", "Function | NodeJs", "Function for create email if booking was rejected\n(NodeJs Booking API)")
Component(sendEmail, "sendEmail", "Function | NodeJs", "Function for send Email\n(NodeJs Booking API)")
Component(sendSMS, "sendSMS", "Function | NodeJs", "Function for send sms\n(NodeJs Booking API)")
}

AddProperty("API", "/sms/2/text/single")
System_Ext(infoBIP, "InfoBip", "External System for Send SMS")

ContainerDb(database, "Moservice Storage", "mySQL Database", "All store for save data and content for Moservice.id")

Lay_R(infoBIP, database)
Rel_D(Web_Moservice, auth_middleware, "1. Request create booking")
Rel_D(auth_middleware, booking_controller, "2. Request create booking")
Rel_D(booking_controller, createBooking, "3. Create booking and Check booking status")
Rel_D(createBooking, rejectBooking, "4. Create booking and Check booking status")

Rel_D(rejectBooking, readByIDWithAdditionalData, "5. Read by ID with additional data")
Rel_D(rejectBooking, updateBookingCustomerStatus_script, "7. Update Booking Customer Status")
Rel_D(rejectBooking, insertInbox, "9. Insert inbox data")
Rel_D(rejectBooking, bookingEmailRejected, "11. Create Mail if booking was rejected")

Rel_D(readByIDWithAdditionalData, database, "6. Read by ID with additional data")
Rel_D(updateBookingCustomerStatus_script, database, "8. Update Booking Customer Status")
Rel_D(insertInbox, database, "10. Insert inbox data")
Rel_D(bookingEmailRejected, database, "12. Retrieve Email data")

Rel_D(bookingEmailRejected, sendEmail, "13. If there is email, send email")
Rel_D(bookingEmailRejected, sendSMS, "14. If no email, send sms")
Rel_D(sendSMS, infoBIP, "15. Send SMS")

@enduml