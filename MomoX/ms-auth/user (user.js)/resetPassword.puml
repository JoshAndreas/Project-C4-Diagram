@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml


LAYOUT_WITH_LEGEND()
title Reset Password User\n[resetPassword]

    Container(web_momo_x, "Web Momo X", "Website | NextJS", "Momo main services")
    
    Boundary(api, "resetPasword user API\n[Component]"){

        Boundary(middleware, "middleware user API\n[Component]"){

            Component(auth_middleware, "verifyResetPasswordUser", "Middleware | NodeJS", "Middleware for check request body resetPasword user\n{ms-auth}")

        }

        Boundary(account_creation, "account_creation\n[Component]", "lib/account_creation.js"){

            Component(validatePassword, "validatePassword", "Function | NodeJS", "function for validate password \n{ms-auth}")
            Component(validatePasswordHash, "validatePasswordHash", "Function | NodeJS", "function for check validate password in hash \n{ms-auth}")
            Component(encryptPassword, "encryptPassword", "Function | NodeJS", "function for encryipt password user \n{ms-auth}")

        }

        Component(resetPasword, "resetPasword", "Function | NodeJS", "API for resetPasword user\n{ms-auth}")

    }

    ContainerDb(momo_x_storage, "Momo X Database", "MySql Database", "Storage Database for auth momo x")


Rel_D(web_momo_x, auth_middleware, "1. Send request check email and password")
Rel_L(auth_middleware, validatePassword, "2. Send request check validate email & password")
Rel_D(auth_middleware, resetPasword, "3. Send request reset password user")
Rel_L(resetPasword, validatePasswordHash, "4. Check password user if same as before or not")
Rel_L(resetPasword, validatePassword, "5. Check format password user")
Rel_L(resetPasword, encryptPassword, "6. Encrypt password user")
Rel_D(resetPasword, momo_x_storage, "7. Update password user")
Rel_D(resetPasword, momo_x_storage, "8. Create log reset password user")

SHOW_LEGEND()
@enduml