@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()
title Component Diagram for Request Riplay Notification\n (api/v1/notification/request-notif-riplay)

AddProperty("URL", "ms-support/api/v1/notification/helper.js")
AddProperty("Repository", "ms-support")
Component(sendNotif, "sendNotif", "Function | NodeJs", "Function for Send Notification")

Boundary(api, "requestPushNotificationRiplay API\n[Component]"){
    AddProperty("Path", "ms-notification\api\v1\Notification\controller.js")
    Component(controller, "Controller", "NodeJS MVC Controller", "Main Controller for Notification Related Function")

    Component(requestPushNotificationRiplay, "requestPushNotificationRiplay", "Function | NodeJs", "Function for Request Push notification Riplay")
    
    Component(createMqConnection, "mq.createMqConnection", "Function | NodeJs", "Function for Create Message Queue Connection")
    Component(connect, "amqp.connect", "Function | NodeJs", "Function for Connect Object")
    Component(createChannel, "connection.createChannel", "Function | NodeJs", "Function for Create Channel")
    Component(getQueueName, "mq.getQueueName", "Function | NodeJs", "Function for Get Queue Name")
    Component(assertQueue, "channel.assertQueue", "Function | NodeJs", "Function for Assert Queue")   
    Component(sendToQueue, "channel.sendToQueue", "Function | NodeJs", "Function for Send to queue")   
    Component(setTimeout, "setTimeout", "Function | NodeJs", "Function for Set Timeout")   

}
Rel(sendNotif, controller, "1. Request send Notification")

Rel(controller, requestPushNotificationRiplay, "2. Request send Notification Riplay")
Rel(requestPushNotificationRiplay, createMqConnection, "3. Request Create Message Queue Connection")
Rel(createMqConnection, connect, "4. Connect Object")
Rel(createMqConnection, createChannel, "5. Create Channel")
Rel(requestPushNotificationRiplay, getQueueName, "6. Get Queue Name (notifriplay)")
Rel(requestPushNotificationRiplay, assertQueue, "7. Assert Queue")
Rel(requestPushNotificationRiplay, sendToQueue, "8. Send to queue")
Rel(requestPushNotificationRiplay, setTimeout, "9. Set Timeout")
@enduml